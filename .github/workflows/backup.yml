name: Nightly Database Backup

on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches:
      - master

jobs:
  backup-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Perform Database Backup
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          CONTAINER: time_manager_all_db_1
          PGUSER: ${{ secrets.PG_USER }}
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}
          PGDATABASE: ${{ secrets.PG_DATABASE }}
        run: |
          # Save private key to file
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # SSH into EC2 instance and perform the backup
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<-EOF
            # Export environment variables for the pg_dump command
            export PGUSER=$PGUSER
            export PGPASSWORD=$PGPASSWORD
            export PGDATABASE=$PGDATABASE

            # Perform the backup inside the Docker container
            docker exec $CONTAINER pg_dump -U $PGUSER $PGDATABASE > backup_$(date +%F).sql

            # Here, you would also handle where to store the backup, like uploading it to S3 or another secure location.
            # aws s3 cp backup_$(date +%F).sql s3://your-backup-bucket/your-app-name/
          EOF
