name: Deploy to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker images
      run: |
        # Build and push backend image
        cd time_manager
        docker build -t webdesignpastor/time_manager_back:latest .
        docker push webdesignpastor/time_manager_back:latest

        # Build and push frontend image
        cd ../time_manager_app
        docker build -t webdesignpastor/time_manager_front:latest .
        docker push webdesignpastor/time_manager_front:latest

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        PGUSER: ${{ secrets.PGUSER }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
      run: |
        # Save private key to file
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # SSH into EC2 and deploy
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<-EOF
          # Pull the latest images
          docker pull webdesignpastor/time_manager_back:latest
          docker pull webdesignpastor/time_manager_front:latest

          # Clone repo
          curl -L https://github.com/WebDesignPastor/time_manager_all/archive/refs/heads/master.tar.gz | tar -xz
          cd time_manager_all-master

          # Set environment variables
          export PGUSER=$PGUSER
          export PGPASSWORD=$PGPASSWORD
          export PGDATABASE=$PGDATABASE

          # Start the services
          docker-compose up -d
        EOF
